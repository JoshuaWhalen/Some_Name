<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor_v2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//menu text
menu_array[0] = "start";
menu_array[1] = "tutorial";
menu_array[2] = "quit";

space = 75;
mpos = 0;




</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//For scrolling through the menu
var move = 0;
move -= max(gamepad_axis_value(0, gp_axislv) &lt; -0.5, gamepad_button_check(0, gp_padu), 0);
move += max(gamepad_axis_value(0, gp_axislv) &gt; 0.5, gamepad_button_check(0, gp_padd), 0)

if(move != 0){
    mpos += move;
    if(mpos &lt; 0){
        mpos = 2;
    }
    if(mpos &gt; 2){
        mpos = 0;
    }
}

//Menu selection
if(gamepad_button_check_pressed(0, gp_face1)){ //"a" button to select
    switch(mpos){
        case 0:{
            room_goto_next();
            break;
        }
        case 1:{
            //room_goto();
            break;
        }
        case 2:{
            game_end();
            break;
        }
   
        default:{
            break;
        }
    }            
}



</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//adding the text to the menu

draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(font_options);
draw_set_color(c_white);

var m;
for(m = 0; m &lt; 3; m += 1){
    draw_text(room_width/2 - 20, y +(m*space), string(menu_array[m]));
    
}

draw_sprite(sprite_index, 0, room_width/2 - 70, y + (mpos * space));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
