<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor_v2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize global variable for pause
global.pause = 0;

//Pause menu text
menu_array[0] = "continue";
menu_array[1] = "restart";
menu_array[2] = "main menu";

space = 75; //Space between lines of text
mpos = 0; //Track menu position for cursor


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Pause - movement

//If the game is not paused, then save the original horizontal, vertical, and image speeds of 
//the obj_player so it can be set to those values again after the player decides to pause. 
with(obj_player){
    if(global.pause == 0){
        old_hspeed = hspeed; //These three values need to be saved in order to preserve the position of
        old_vspeed = vspeed;           //the obj_player prior to pausing. For example, if you are halfway 
        old_image_speed = image_speed; //through a jump and then the game is paused, you want to continue 
                                       //where you left off when the game is unpaused. 
    }                               
}

//If "start" button(or space key) is pressed while the game is not paused and you're not in the main menu, then pause
if((gamepad_button_check_pressed(0, gp_start) || gamepad_button_check_pressed(1, gp_start) || keyboard_check_pressed(vk_space)) &amp;&amp; 
    global.pause == 0 &amp;&amp; (room_get_name(room) != "rm_menu")){ 
    
    audio_play_sound(snd_select, 0, 0); //Sound effect upon pressing "start"
    global.pause = 1;
    //Stop all movememnt of the obj_player
    with(obj_player){ 
        hspeed = 0;
        vspeed = 0;
        image_speed = 0;
    }
    //Change the room speed to 7 so that the cursor isn't moving at 60 steps per second
    room_speed = 7;
}

//Else if "start" button(or space key) is pressed while the game is paused and you're not in the main menu, then unpause
else if((gamepad_button_check_pressed(0, gp_start) || gamepad_button_check_pressed(1, gp_start) || keyboard_check_pressed(vk_space)) &amp;&amp; 
         global.pause == 1 &amp;&amp; (room_get_name(room) != "rm_menu")){
    audio_play_sound(snd_select, 0, 0); //Sound effect upon pressing "start"
    global.pause = 0;
    //Set the speeds back to where you were prior to pausing
    with(obj_player){
        hspeed = old_hspeed;
        vspeed = old_vspeed;
        image_speed = old_image_speed;
    }
    //Return the room speed back to normal 
    room_speed = 60;
}

//Pause - menu
//If paused then there is a menu 
if(global.pause == 1){
    //Scrolling through the menu
    var move = 0;
    //Scrolling up with leftstick, dpad, or keyboard's up arrow
    move -= max(gamepad_axis_value(0, gp_axislv) &lt; -0.5, gamepad_button_check(0, gp_padu), 
                gamepad_axis_value(1, gp_axislv) &lt; -0.5, gamepad_button_check(1, gp_padu), 
                keyboard_check_pressed(vk_up), 0); 
     //Scrolling down with leftstick, dpad or keyboard's down arrow
    move += max(gamepad_axis_value(0, gp_axislv) &gt; 0.5, gamepad_button_check(0, gp_padd), 
                gamepad_axis_value(1, gp_axislv) &gt; 0.5, gamepad_button_check(1, gp_padd), 
                keyboard_check_pressed(vk_down), 0)
    
    //Wrap around the pause menu options. Prevent scrolling out of bounds of the pause menu.
    mpos += move; //mpos is the position of the cursor(arrow)
    if(mpos &lt; 0){ //0 is the first index of the menu_array
        mpos = 2; //2 is the last index of the menu_array
    }
    if(mpos &gt; 2){
        mpos = 0;
    }
    
    //If scrolling, play the scrolling sound effect
    if(move != 0){
        audio_play_sound(snd_scroll, 0, 0); 
    }
    
    //Pause menu selection. Cases for when the "a" button(or enter key) is pressed.
    if(gamepad_button_check_pressed(0, gp_face1) || gamepad_button_check_pressed(1, gp_face1) || keyboard_check_pressed(vk_enter)){ 
        audio_play_sound(snd_select, 0, 0); //Sound effect upon pressing "a" in the menu
        switch(mpos){
            case 0:{ //player selected "continue"
                global.pause = 0; //Unpause. Note there are 2 ways to unpause. By pressing "start" while you're paused, and by selecting
                with(obj_player){           //the continue option in the pause menu. So upon unpausing in this method, you want to set the  
                    hspeed = old_hspeed;    //speeds back to where you were prior to pausing.
                    vspeed = old_vspeed;
                    image_speed = old_image_speed;
                }
                //Return the room speed back to normal
                room_speed = 60;
                break;
            }
            case 1:{ //player selected "restart"
                room_restart(); 
                global.pause = 0; 
                break;
            }
            case 2:{ //player selected "main menu"
                room_goto(rm_menu);
                break;
            }
            default:{
                break;
            }
        }//end switch statement            
    }//end pause menu selection if-statement
}//end paused if-statement
   



//If esc key pressed, then quit the game 
if(keyboard_check_pressed(vk_escape)){
    game_end();
}






</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//If paused, then draw the pause menu
if(global.pause){
    //Drawing rectangle
    draw_set_color(c_black);
    draw_set_alpha(.5);
    draw_rectangle(0, 0, room_width, room_height, 0);
    
    //Text configuration
    draw_set_halign(fa_left);
    draw_set_valign(fa_middle);
    draw_set_font(font_options);
    draw_set_color(c_white);
    draw_set_alpha(1);

    //Draw pause menu text 
    var m;
    for(m = 0; m &lt; 3; m += 1){
        draw_text(room_width/2 - 20, y +(m*space), string(menu_array[m])); 
    }
    
    //Draw selection arrow
    draw_sprite(sprite_index, 0, room_width/2 - 70, y + (mpos * space)); 
}





</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
