<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_cursor_v2</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Initialize global variable for pause
//global.pause = 0;

//Final menu text
end_array[0] = "REMATCH";
end_array[1] = "CHARACTER SELECT";
end_array[2] = "MAIN MENU";
end_array[3] = "QUIT";

space = 100; //Space between lines of text
mpos = 0; //Track menu position for cursor
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//End Menu

//Scrolling through the menu
var move = 0;
//Scrolling up with leftstick, dpad, and keyboard up arrow
move -= max(gamepad_axis_value(0, gp_axislv) &lt; -0.5, gamepad_button_check(0, gp_padu), keyboard_check_pressed(vk_up), 0); 
//Scrolling down with leftstick, dpad, and keyboard down arrow
move += max(gamepad_axis_value(0, gp_axislv) &gt; 0.5, gamepad_button_check(0, gp_padd), keyboard_check_pressed(vk_down), 0); 

//Wrap around the menu options. Prevent scrolling out of bounds of the menu. 
mpos += move; //mpos is the position of the cursor(arrow)
if(mpos &lt; 0){ //0 is the first index of the menu_array
    mpos = 3; //2 is the last index of the menu_array
}
if(mpos &gt; 3){
    mpos = 0;
}

//If scrolling, play the scrolling sound effect
if(move != 0){
    audio_play_sound(snd_scroll, 0, 0); 
}

//Menu selection. Cases for when the "a" button(or enter key) is pressed. 
if(gamepad_button_check_pressed(0, gp_face1) || keyboard_check_pressed(vk_enter)){ 
    audio_play_sound(snd_select, 0, 0); //Sound effect upon pressing "a" in the menu
    switch(mpos){ 
        case 0:{ //player selected "rematch"
            room_goto(rm_arena);
            break;
        }
        case 1:{ //player selected "character select"
            room_goto(rm_char_select); 
            break;
        }
        case 2:{ // player selected "main menu"
            room_goto(rm_menu);
            break;
        }
        case 3:{ // player selected "quit"
            game_end();
            break;
        }
        default:{
            break;
        }
    }//end switch statement        
}//end menu selection if-statement




//If esc key pressed, then quit the game 
if(keyboard_check_pressed(vk_escape)){
    game_end();
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//To add the text to the end menu

//Text configuration
draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(font_bn_machine);
draw_set_color(c_white);

//Draw menu text 
//1750, 680
for(var m = 0; m &lt; 4; m += 1){ 
    draw_text(1780 - 240, 630 +(m*space), string(end_array[m])); 
    //draw_text(room_width/2 - 20, y +(m*space), string(menu_array[m])); 
    //draw_sprite(menu_array[m], 0, room_width/2 - 100, y + (mpos * space)); 
    
}

//Draw selection arrow
draw_sprite(sprite_index, 0, 1780 - 290, 630 + (mpos * space)); 


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
