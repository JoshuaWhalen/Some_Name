<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_healthbar_new</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>image_speed = 0;
me = id;

global.round_status = 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Track living player. destroy otherwise
me = id;
if (instance_exists(owner)){
    move_towards_point(owner.x, y, speed);

    x = owner.x; //follow the player
    y = owner.y - owner.sprite_height/2 - 20;
    
    //set new healthbar health;
    image_index = (owner.hit / owner.max_hit) * 100;
}
else{
    global.round_status = 0; //0 if round is over 
    instance_destroy();
}
if (instance_exists(owner)){
if(owner.hit &lt;= 0){
    global.game = true;
    with(owner){ 
        
        if(player_num == 1){ //if player 2 destroyed
            global.p1_wins += 1; //player 1 wins, add to p1 win count
            if(global.p0.hit &lt;= 0){
                global.p1_wins -= 1;
                with(global.p0){
                    instance_destroy();
                }
                global.round_num -= 1;
                room_goto(rm_arena);
            }
        }
        else if(player_num == 0){ //if player 1 destroyed
            global.p2_wins += 1; //player 2 wins, add to p2 win count
            if(global.p1.hit &lt;= 0){
                global.p0_wins -= 1;
                with(global.p1){
                    instance_destroy();
                }
                global.round_num -= 1;
                room_goto(rm_arena);
            }
        }
        
        global.round_status = 0;            
        instance_destroy();
    }
    global.round_status = 0;    
    instance_destroy();
}
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
